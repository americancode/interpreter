Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | /* empty */

    4 stmt: ';'
    5     | PRINT expr ';'
    6     | VARIABLE '=' expr ';'
    7     | while expr do stmt_list jmp end ';'
    8     | IF expr then stmt_list end ';'

    9 while: WHILE

   10 do: DO

   11 then: THEN

   12 jmp: /* empty */

   13 end: END

   14 stmt_list: stmt
   15          | stmt_list stmt

   16 expr: INTEGER
   17     | VARIABLE
   18     | '-' expr
   19     | expr '+' expr
   20     | expr '-' expr
   21     | expr '*' expr
   22     | expr '/' expr
   23     | expr '<' expr
   24     | expr '>' expr
   25     | expr GE expr
   26     | expr LE expr
   27     | expr NE expr
   28     | expr EQ expr
   29     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 29
')' (41) 29
'*' (42) 21
'+' (43) 19
'-' (45) 18 20
'/' (47) 22
';' (59) 4 5 6 7 8
'<' (60) 23
'=' (61) 6
'>' (62) 24
error (256)
INTEGER (258) 16
VARIABLE (259) 6 17
WHILE (260) 9
DO (261) 10
IF (262) 8
THEN (263) 11
END (264) 13
PRINT (265) 5
NE (266) 27
EQ (267) 28
LE (268) 26
GE (269) 25
UMINUS (270)


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
program (27)
    on left: 1, on right: 0
function (28)
    on left: 2 3, on right: 1 2
stmt (29)
    on left: 4 5 6 7 8, on right: 2 14 15
while (30)
    on left: 9, on right: 7
do (31)
    on left: 10, on right: 7
then (32)
    on left: 11, on right: 8
jmp (33)
    on left: 12, on right: 7
end (34)
    on left: 13, on right: 7 8
stmt_list (35)
    on left: 14 15, on right: 7 8 15
expr (36)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right: 5
    6 7 8 18 19 20 21 22 23 24 25 26 27 28 29


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: function .
    2 function: function . stmt

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    PRINT     shift, and go to state 7
    ';'       shift, and go to state 8

    $default  reduce using rule 1 (program)

    stmt   go to state 9
    while  go to state 10


state 3

    0 $accept: program $end .

    $default  accept


state 4

    6 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 11


state 5

    9 while: WHILE .

    $default  reduce using rule 9 (while)


state 6

    8 stmt: IF . expr then stmt_list end ';'

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 16


state 7

    5 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 17


state 8

    4 stmt: ';' .

    $default  reduce using rule 4 (stmt)


state 9

    2 function: function stmt .

    $default  reduce using rule 2 (function)


state 10

    7 stmt: while . expr do stmt_list jmp end ';'

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 18


state 11

    6 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 19


state 12

   16 expr: INTEGER .

    $default  reduce using rule 16 (expr)


state 13

   17 expr: VARIABLE .

    $default  reduce using rule 17 (expr)


state 14

   18 expr: '-' . expr

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 20


state 15

   29 expr: '(' . expr ')'

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 21


state 16

    8 stmt: IF expr . then stmt_list end ';'
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    THEN  shift, and go to state 22
    '>'   shift, and go to state 23
    '<'   shift, and go to state 24
    NE    shift, and go to state 25
    EQ    shift, and go to state 26
    LE    shift, and go to state 27
    GE    shift, and go to state 28
    '+'   shift, and go to state 29
    '-'   shift, and go to state 30
    '*'   shift, and go to state 31
    '/'   shift, and go to state 32

    then  go to state 33


state 17

    5 stmt: PRINT expr . ';'
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '>'  shift, and go to state 23
    '<'  shift, and go to state 24
    NE   shift, and go to state 25
    EQ   shift, and go to state 26
    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    ';'  shift, and go to state 34


state 18

    7 stmt: while expr . do stmt_list jmp end ';'
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    DO   shift, and go to state 35
    '>'  shift, and go to state 23
    '<'  shift, and go to state 24
    NE   shift, and go to state 25
    EQ   shift, and go to state 26
    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    do  go to state 36


state 19

    6 stmt: VARIABLE '=' expr . ';'
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '>'  shift, and go to state 23
    '<'  shift, and go to state 24
    NE   shift, and go to state 25
    EQ   shift, and go to state 26
    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    ';'  shift, and go to state 37


state 20

   18 expr: '-' expr .
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    $default  reduce using rule 18 (expr)


state 21

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr
   29     | '(' expr . ')'

    '>'  shift, and go to state 23
    '<'  shift, and go to state 24
    NE   shift, and go to state 25
    EQ   shift, and go to state 26
    LE   shift, and go to state 27
    GE   shift, and go to state 28
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    ')'  shift, and go to state 38


state 22

   11 then: THEN .

    $default  reduce using rule 11 (then)


state 23

   24 expr: expr '>' . expr

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 39


state 24

   23 expr: expr '<' . expr

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 40


state 25

   27 expr: expr NE . expr

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 41


state 26

   28 expr: expr EQ . expr

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 42


state 27

   26 expr: expr LE . expr

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 43


state 28

   25 expr: expr GE . expr

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 44


state 29

   19 expr: expr '+' . expr

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 45


state 30

   20 expr: expr '-' . expr

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 46


state 31

   21 expr: expr '*' . expr

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 47


state 32

   22 expr: expr '/' . expr

    INTEGER   shift, and go to state 12
    VARIABLE  shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 48


state 33

    8 stmt: IF expr then . stmt_list end ';'

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    PRINT     shift, and go to state 7
    ';'       shift, and go to state 8

    stmt       go to state 49
    while      go to state 10
    stmt_list  go to state 50


state 34

    5 stmt: PRINT expr ';' .

    $default  reduce using rule 5 (stmt)


state 35

   10 do: DO .

    $default  reduce using rule 10 (do)


state 36

    7 stmt: while expr do . stmt_list jmp end ';'

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    PRINT     shift, and go to state 7
    ';'       shift, and go to state 8

    stmt       go to state 49
    while      go to state 10
    stmt_list  go to state 51


state 37

    6 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 6 (stmt)


state 38

   29 expr: '(' expr ')' .

    $default  reduce using rule 29 (expr)


state 39

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   24     | expr '>' expr .
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 24 (expr)


state 40

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   23     | expr '<' expr .
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 23 (expr)


state 41

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   27     | expr NE expr .
   28     | expr . EQ expr

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 27 (expr)


state 42

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr
   28     | expr EQ expr .

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 28 (expr)


state 43

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   26     | expr LE expr .
   27     | expr . NE expr
   28     | expr . EQ expr

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 26 (expr)


state 44

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   25     | expr GE expr .
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 25 (expr)


state 45

   19 expr: expr . '+' expr
   19     | expr '+' expr .
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 19 (expr)


state 46

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   20     | expr '-' expr .
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 20 (expr)


state 47

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   21     | expr '*' expr .
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    $default  reduce using rule 21 (expr)


state 48

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   22     | expr '/' expr .
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    $default  reduce using rule 22 (expr)


state 49

   14 stmt_list: stmt .

    $default  reduce using rule 14 (stmt_list)


state 50

    8 stmt: IF expr then stmt_list . end ';'
   15 stmt_list: stmt_list . stmt

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    END       shift, and go to state 52
    PRINT     shift, and go to state 7
    ';'       shift, and go to state 8

    stmt   go to state 53
    while  go to state 10
    end    go to state 54


state 51

    7 stmt: while expr do stmt_list . jmp end ';'
   15 stmt_list: stmt_list . stmt

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    PRINT     shift, and go to state 7
    ';'       shift, and go to state 8

    $default  reduce using rule 12 (jmp)

    stmt   go to state 53
    while  go to state 10
    jmp    go to state 55


state 52

   13 end: END .

    $default  reduce using rule 13 (end)


state 53

   15 stmt_list: stmt_list stmt .

    $default  reduce using rule 15 (stmt_list)


state 54

    8 stmt: IF expr then stmt_list end . ';'

    ';'  shift, and go to state 56


state 55

    7 stmt: while expr do stmt_list jmp . end ';'

    END  shift, and go to state 52

    end  go to state 57


state 56

    8 stmt: IF expr then stmt_list end ';' .

    $default  reduce using rule 8 (stmt)


state 57

    7 stmt: while expr do stmt_list jmp end . ';'

    ';'  shift, and go to state 58


state 58

    7 stmt: while expr do stmt_list jmp end ';' .

    $default  reduce using rule 7 (stmt)
