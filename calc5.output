Nonterminals useless in grammar

   con


Rules useless in grammar

   39 con: STRING


Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | /* empty */

    4 stmt: ';'
    5     | PRINT expr ';'
    6     | PRINT STRING ';'
    7     | READ expr ';'
    8     | VARIABLE '=' expr ';'
    9     | do stmt_list UNTIL expr test ';'
   10     | while expr do stmt_list jmp end ';'
   11     | IF expr then stmt_list end ';'
   12     | IF expr then stmt_list jmp else stmt_list end ';'

   13 while: WHILE

   14 do: DO

   15 then: THEN

   16 test: /* empty */

   17 else: ELSE

   18 jmp: /* empty */

   19 end: END

   20 stmt_list: stmt
   21          | stmt_list stmt

   22 expr: INTEGER
   23     | VARIABLE
   24     | expr OR expr
   25     | expr AND expr
   26     | NOT expr
   27     | '-' expr
   28     | expr '+' expr
   29     | expr '-' expr
   30     | expr '*' expr
   31     | expr '/' expr
   32     | expr '<' expr
   33     | expr '>' expr
   34     | expr GE expr
   35     | expr LE expr
   36     | expr NE expr
   37     | expr EQ expr
   38     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 38
')' (41) 38
'*' (42) 30
'+' (43) 28
'-' (45) 27 29
'/' (47) 31
';' (59) 4 5 6 7 8 9 10 11 12
'<' (60) 32
'=' (61) 8
'>' (62) 33
error (256)
INTEGER (258) 22
VARIABLE (259) 8 23
WHILE (260) 13
DO (261) 14
IF (262) 11 12
THEN (263) 15
ELSE (264) 17
END (265) 19
PRINT (266) 5 6
STRING (267) 6
UNTIL (268) 9
READ (269) 7
NE (270) 36
EQ (271) 37
LE (272) 35
GE (273) 34
OR (274) 24
AND (275) 25
NOT (276) 26
UMINUS (277)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
function (35)
    on left: 2 3, on right: 1 2
stmt (36)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2 20 21
while (37)
    on left: 13, on right: 10
do (38)
    on left: 14, on right: 9 10
then (39)
    on left: 15, on right: 11 12
test (40)
    on left: 16, on right: 9
else (41)
    on left: 17, on right: 12
jmp (42)
    on left: 18, on right: 10 12
end (43)
    on left: 19, on right: 10 11 12
stmt_list (44)
    on left: 20 21, on right: 9 10 11 12 21
expr (45)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38, on right:
    5 7 8 9 10 11 12 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: function .
    2 function: function . stmt

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    DO        shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    READ      shift, and go to state 9
    ';'       shift, and go to state 10

    $default  reduce using rule 1 (program)

    stmt   go to state 11
    while  go to state 12
    do     go to state 13


state 3

    0 $accept: program $end .

    $default  accept


state 4

    8 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 14


state 5

   13 while: WHILE .

    $default  reduce using rule 13 (while)


state 6

   14 do: DO .

    $default  reduce using rule 14 (do)


state 7

   11 stmt: IF . expr then stmt_list end ';'
   12     | IF . expr then stmt_list jmp else stmt_list end ';'

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 20


state 8

    5 stmt: PRINT . expr ';'
    6     | PRINT . STRING ';'

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    STRING    shift, and go to state 21
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 22


state 9

    7 stmt: READ . expr ';'

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 23


state 10

    4 stmt: ';' .

    $default  reduce using rule 4 (stmt)


state 11

    2 function: function stmt .

    $default  reduce using rule 2 (function)


state 12

   10 stmt: while . expr do stmt_list jmp end ';'

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 24


state 13

    9 stmt: do . stmt_list UNTIL expr test ';'

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    DO        shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    READ      shift, and go to state 9
    ';'       shift, and go to state 10

    stmt       go to state 25
    while      go to state 12
    do         go to state 13
    stmt_list  go to state 26


state 14

    8 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 27


state 15

   22 expr: INTEGER .

    $default  reduce using rule 22 (expr)


state 16

   23 expr: VARIABLE .

    $default  reduce using rule 23 (expr)


state 17

   27 expr: '-' . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 28


state 18

   26 expr: NOT . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 29


state 19

   38 expr: '(' . expr ')'

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 30


state 20

   11 stmt: IF expr . then stmt_list end ';'
   12     | IF expr . then stmt_list jmp else stmt_list end ';'
   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    THEN  shift, and go to state 31
    '>'   shift, and go to state 32
    '<'   shift, and go to state 33
    NE    shift, and go to state 34
    EQ    shift, and go to state 35
    LE    shift, and go to state 36
    GE    shift, and go to state 37
    OR    shift, and go to state 38
    AND   shift, and go to state 39
    '+'   shift, and go to state 40
    '-'   shift, and go to state 41
    '*'   shift, and go to state 42
    '/'   shift, and go to state 43

    then  go to state 44


state 21

    6 stmt: PRINT STRING . ';'

    ';'  shift, and go to state 45


state 22

    5 stmt: PRINT expr . ';'
   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '>'  shift, and go to state 32
    '<'  shift, and go to state 33
    NE   shift, and go to state 34
    EQ   shift, and go to state 35
    LE   shift, and go to state 36
    GE   shift, and go to state 37
    OR   shift, and go to state 38
    AND  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ';'  shift, and go to state 46


state 23

    7 stmt: READ expr . ';'
   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '>'  shift, and go to state 32
    '<'  shift, and go to state 33
    NE   shift, and go to state 34
    EQ   shift, and go to state 35
    LE   shift, and go to state 36
    GE   shift, and go to state 37
    OR   shift, and go to state 38
    AND  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ';'  shift, and go to state 47


state 24

   10 stmt: while expr . do stmt_list jmp end ';'
   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    DO   shift, and go to state 6
    '>'  shift, and go to state 32
    '<'  shift, and go to state 33
    NE   shift, and go to state 34
    EQ   shift, and go to state 35
    LE   shift, and go to state 36
    GE   shift, and go to state 37
    OR   shift, and go to state 38
    AND  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    do  go to state 48


state 25

   20 stmt_list: stmt .

    $default  reduce using rule 20 (stmt_list)


state 26

    9 stmt: do stmt_list . UNTIL expr test ';'
   21 stmt_list: stmt_list . stmt

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    DO        shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    UNTIL     shift, and go to state 49
    READ      shift, and go to state 9
    ';'       shift, and go to state 10

    stmt   go to state 50
    while  go to state 12
    do     go to state 13


state 27

    8 stmt: VARIABLE '=' expr . ';'
   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '>'  shift, and go to state 32
    '<'  shift, and go to state 33
    NE   shift, and go to state 34
    EQ   shift, and go to state 35
    LE   shift, and go to state 36
    GE   shift, and go to state 37
    OR   shift, and go to state 38
    AND  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ';'  shift, and go to state 51


state 28

   24 expr: expr . OR expr
   25     | expr . AND expr
   27     | '-' expr .
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    $default  reduce using rule 27 (expr)


state 29

   24 expr: expr . OR expr
   25     | expr . AND expr
   26     | NOT expr .
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    $default  reduce using rule 26 (expr)


state 30

   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   38     | '(' expr . ')'

    '>'  shift, and go to state 32
    '<'  shift, and go to state 33
    NE   shift, and go to state 34
    EQ   shift, and go to state 35
    LE   shift, and go to state 36
    GE   shift, and go to state 37
    OR   shift, and go to state 38
    AND  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ')'  shift, and go to state 52


state 31

   15 then: THEN .

    $default  reduce using rule 15 (then)


state 32

   33 expr: expr '>' . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 53


state 33

   32 expr: expr '<' . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 54


state 34

   36 expr: expr NE . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 55


state 35

   37 expr: expr EQ . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 56


state 36

   35 expr: expr LE . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 57


state 37

   34 expr: expr GE . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 58


state 38

   24 expr: expr OR . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 59


state 39

   25 expr: expr AND . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 60


state 40

   28 expr: expr '+' . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 61


state 41

   29 expr: expr '-' . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 62


state 42

   30 expr: expr '*' . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 63


state 43

   31 expr: expr '/' . expr

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 64


state 44

   11 stmt: IF expr then . stmt_list end ';'
   12     | IF expr then . stmt_list jmp else stmt_list end ';'

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    DO        shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    READ      shift, and go to state 9
    ';'       shift, and go to state 10

    stmt       go to state 25
    while      go to state 12
    do         go to state 13
    stmt_list  go to state 65


state 45

    6 stmt: PRINT STRING ';' .

    $default  reduce using rule 6 (stmt)


state 46

    5 stmt: PRINT expr ';' .

    $default  reduce using rule 5 (stmt)


state 47

    7 stmt: READ expr ';' .

    $default  reduce using rule 7 (stmt)


state 48

   10 stmt: while expr do . stmt_list jmp end ';'

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    DO        shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    READ      shift, and go to state 9
    ';'       shift, and go to state 10

    stmt       go to state 25
    while      go to state 12
    do         go to state 13
    stmt_list  go to state 66


state 49

    9 stmt: do stmt_list UNTIL . expr test ';'

    INTEGER   shift, and go to state 15
    VARIABLE  shift, and go to state 16
    '-'       shift, and go to state 17
    NOT       shift, and go to state 18
    '('       shift, and go to state 19

    expr  go to state 67


state 50

   21 stmt_list: stmt_list stmt .

    $default  reduce using rule 21 (stmt_list)


state 51

    8 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 8 (stmt)


state 52

   38 expr: '(' expr ')' .

    $default  reduce using rule 38 (expr)


state 53

   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   33     | expr '>' expr .
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 33 (expr)


state 54

   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   32     | expr '<' expr .
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 32 (expr)


state 55

   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   36     | expr NE expr .
   37     | expr . EQ expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 36 (expr)


state 56

   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr
   37     | expr EQ expr .

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 37 (expr)


state 57

   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   35     | expr LE expr .
   36     | expr . NE expr
   37     | expr . EQ expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 35 (expr)


state 58

   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   34     | expr GE expr .
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 34 (expr)


state 59

   24 expr: expr . OR expr
   24     | expr OR expr .
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 24 (expr)


state 60

   24 expr: expr . OR expr
   25     | expr . AND expr
   25     | expr AND expr .
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 25 (expr)


state 61

   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   28     | expr '+' expr .
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 28 (expr)


state 62

   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   29     | expr '-' expr .
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 29 (expr)


state 63

   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   30     | expr '*' expr .
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    $default  reduce using rule 30 (expr)


state 64

   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   31     | expr '/' expr .
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    $default  reduce using rule 31 (expr)


state 65

   11 stmt: IF expr then stmt_list . end ';'
   12     | IF expr then stmt_list . jmp else stmt_list end ';'
   21 stmt_list: stmt_list . stmt

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    DO        shift, and go to state 6
    IF        shift, and go to state 7
    END       shift, and go to state 68
    PRINT     shift, and go to state 8
    READ      shift, and go to state 9
    ';'       shift, and go to state 10

    $default  reduce using rule 18 (jmp)

    stmt   go to state 50
    while  go to state 12
    do     go to state 13
    jmp    go to state 69
    end    go to state 70


state 66

   10 stmt: while expr do stmt_list . jmp end ';'
   21 stmt_list: stmt_list . stmt

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    DO        shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    READ      shift, and go to state 9
    ';'       shift, and go to state 10

    $default  reduce using rule 18 (jmp)

    stmt   go to state 50
    while  go to state 12
    do     go to state 13
    jmp    go to state 71


state 67

    9 stmt: do stmt_list UNTIL expr . test ';'
   24 expr: expr . OR expr
   25     | expr . AND expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . '>' expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . NE expr
   37     | expr . EQ expr

    '>'  shift, and go to state 32
    '<'  shift, and go to state 33
    NE   shift, and go to state 34
    EQ   shift, and go to state 35
    LE   shift, and go to state 36
    GE   shift, and go to state 37
    OR   shift, and go to state 38
    AND  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 16 (test)

    test  go to state 72


state 68

   19 end: END .

    $default  reduce using rule 19 (end)


state 69

   12 stmt: IF expr then stmt_list jmp . else stmt_list end ';'

    ELSE  shift, and go to state 73

    else  go to state 74


state 70

   11 stmt: IF expr then stmt_list end . ';'

    ';'  shift, and go to state 75


state 71

   10 stmt: while expr do stmt_list jmp . end ';'

    END  shift, and go to state 68

    end  go to state 76


state 72

    9 stmt: do stmt_list UNTIL expr test . ';'

    ';'  shift, and go to state 77


state 73

   17 else: ELSE .

    $default  reduce using rule 17 (else)


state 74

   12 stmt: IF expr then stmt_list jmp else . stmt_list end ';'

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    DO        shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    READ      shift, and go to state 9
    ';'       shift, and go to state 10

    stmt       go to state 25
    while      go to state 12
    do         go to state 13
    stmt_list  go to state 78


state 75

   11 stmt: IF expr then stmt_list end ';' .

    $default  reduce using rule 11 (stmt)


state 76

   10 stmt: while expr do stmt_list jmp end . ';'

    ';'  shift, and go to state 79


state 77

    9 stmt: do stmt_list UNTIL expr test ';' .

    $default  reduce using rule 9 (stmt)


state 78

   12 stmt: IF expr then stmt_list jmp else stmt_list . end ';'
   21 stmt_list: stmt_list . stmt

    VARIABLE  shift, and go to state 4
    WHILE     shift, and go to state 5
    DO        shift, and go to state 6
    IF        shift, and go to state 7
    END       shift, and go to state 68
    PRINT     shift, and go to state 8
    READ      shift, and go to state 9
    ';'       shift, and go to state 10

    stmt   go to state 50
    while  go to state 12
    do     go to state 13
    end    go to state 80


state 79

   10 stmt: while expr do stmt_list jmp end ';' .

    $default  reduce using rule 10 (stmt)


state 80

   12 stmt: IF expr then stmt_list jmp else stmt_list end . ';'

    ';'  shift, and go to state 81


state 81

   12 stmt: IF expr then stmt_list jmp else stmt_list end ';' .

    $default  reduce using rule 12 (stmt)
